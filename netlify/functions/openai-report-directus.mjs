import fetch from 'node-fetch';

const REPORT_DIRECTUS_URL = process.env.REPORT_DIRECTUS_URL
const REPORT_DIRECTUS_TOKEN = process.env.REPORT_DIRECTUS_TOKEN

export async function handler(event) {
  if (event.httpMethod !== 'POST') {
    return { statusCode: 405, body: 'Method Not Allowed' };
  }

  try {
    const { message, threadId,  rundId, chatPersona, openaiId } = JSON.parse(event.body);
    
    // Directus endpoint to create an item in your collection
    const directusEndpoint = `${REPORT_DIRECTUS_URL}/items/spp_election_subversion_threads`;

    const headers = {
      'Authorization': `Bearer ${REPORT_DIRECTUS_TOKEN}`,
      'Content-Type': 'application/json'
    };

    const payload = {
      threadid: threadId,
      rundid: rundId,
      // 'timestamp' is auto-generated by Directus upon item creation
      chatpersona: chatPersona,
      message: message.content,
      openid_id: openaiId || null // Set only for OpenAI messages
    };

    const response = await fetch(directusEndpoint, {
      method: 'POST',
      body: JSON.stringify(payload),
      headers: headers
    });

    if (!response.ok) {
      throw new Error(`Error: ${response.statusText}`);
    }

    const responseData = await response.json();
    console.log(responseData)
    return {
      statusCode: 200,
      body: JSON.stringify({ message: 'Item created in Directus', data: responseData })
    };
  } catch (error) {
    return { statusCode: 500, body: JSON.stringify({ error: error.message }) };
  }
};
